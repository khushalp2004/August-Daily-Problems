
///37. Sudoku Solver
 bool satisfy(vector<vector<char>> &board,int i,int j,char c){
        for(int r=0;r<9;r++){
            if(board[i][r]==c || board[r][j]==c){
                return false;
            }
        }

        int sr=i-i%3,sc=j-j%3;
        for(int row=0;row<3;row++){
            for(int col=0;col<3;col++){
                if(board[sr+row][sc+col]==c){
                    return false;
                }
            }
        }
        return true;
    }
    bool solve(vector<vector<char>> &board){
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(board[i][j]=='.'){
                    for(char c='1';c<='9';c++){
                        if(satisfy(board,i,j,c)){
                            board[i][j]=c;
                            if(solve(board)){
                                return true;
                            }
                            board[i][j]='.';
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }