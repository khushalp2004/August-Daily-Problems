
//brute force tc-O(n^2)
int n;
    int findMax(vector<int> &nums,int skipIt){
        int currLength=0;
        int maxLength=0;

        for(int i=0;i<n;i++){
            if(i==skipIt){
                continue;
            }
            if(nums[i]==1){
                currLength++;
                maxLength=max(maxLength,currLength);
            }else{
                currLength=0;

            }
        }
        return maxLength;
    }
    int longestSubarray(vector<int>& nums) {
        //sliding window can be used
        n=nums.size();
        int max_count=0;
        int Zeroes=0;

        for(int i=0;i<n;i++){
            if(nums[i]==0){
                Zeroes++;
                max_count=max(max_count,findMax(nums,i));
            }
        }

        if(Zeroes==0){
            return n-1;
        }
        return max_count;
    }